import os
from transformers import BartTokenizer, BartForConditionalGeneration
from flask import Flask, request, render_template, jsonify

app = Flask(__name__)

# Specify the path to the folder containing the pre-trained BART model
model_folder = "/home/wolfrey/seasonapp/checkpoint-55210/"
history_file = "history.txt"

# Load pre-trained BART tokenizer from the local folder
tokenizer = BartTokenizer.from_pretrained(
    os.path.join(model_folder, "tokenizer"),
    use_auth_token=False
)

# Load pre-trained BART model from the local folder
model = BartForConditionalGeneration.from_pretrained(
    model_folder,
    local_files_only=True
)

def load_history():
    try:
        with open(history_file, 'r') as file:
            return eval(file.read())
    except FileNotFoundError:
        return []

def save_history(history):
    with open(history_file, 'w') as file:
        file.write(str(history))

history = load_history()

def summarize_text(text, max_length=150):
    inputs = tokenizer.encode("summarize: " + text, return_tensors="pt", max_length=1024, truncation=True)
    summary_ids = model.generate(inputs, max_length=max_length, min_length=20, length_penalty=1.5, num_beams=5, early_stopping=False)
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    summary = summary.encode('utf-8').decode('utf-8')
    return summary

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/summarize', methods=['POST'])
def get_summary():
    data = request.get_json()
    text = data.get('text', '')

    if not text:
        return jsonify({'error': 'Text field is empty'})

    summary = summarize_text(text)
    history.append({'input': text, 'summary': summary})
    save_history(history)
    
    return jsonify({'summary': summary, 'history': history})

@app.route('/clear_history', methods=['POST'])
def clear_history():
    global history
    history = []
    save_history(history)
    return jsonify({'message': 'History cleared successfully'})

if __name__ == '__main__':
    app.run(debug=False)
